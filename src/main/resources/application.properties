spring.profiles.active=local
server.max-http-header-size=10MB

# 개발할 때에만 create-drop 또는 update를 사용하고 운영 환경에서는 validate를 사용
## update는 drop하지 않고 있다가 '변경'된 컬럼을 '추가'해 준다.
### 변경된 컬럼을 변경하는게 아니라, 기존의 것은 내비두고, jpa는 어? 얘 없네~ 하고 추가만 해준다.
### 따라서 변경이 되면 지울 건 스키마 관리 툴과 ddl 관리 툴로 관리를 또 해줘야 되는 것이고,
### update에 따라 스키마가 자동으로 모든것을 해주지는 않는다.
## 운영 환경에서는 함부로 컬림을 드랍하고 추가 하는 것은 위험하므로, validate.
### 발리데이터는 추가/드랍 없이 디비와 entity객체가 잘 매핑이 되어 있는지 검증만 해준다.
spring.jpa.hibernate.ddl-auto=create-drop

# 개발시 SQL 로깅을 하여 어떤 값으로 어떤 SQL이 실행되는지 확인.
## 운영시에는 서버에 부담이 되므로 굳이 파일이나 콘솔에 로깅할 필요는 없으나
## 디비 자체의 로깅 기능이나 간소화된 파일 로그로테이트 정도가 좋을 듯?
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE